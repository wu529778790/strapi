name: Docker Build and Deploy

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/strapi-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for GitHub Container Registry
        id: meta-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Extract metadata for Docker Hub
        id: meta-dockerhub
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta-ghcr.outputs.tags }}
            ${{ steps.meta-dockerhub.outputs.tags }}
          labels: |
            ${{ steps.meta-ghcr.outputs.labels }}
            ${{ steps.meta-dockerhub.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # 登录到容器注册表
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # 停止并删除旧容器
            docker stop strapi-app || true
            docker rm strapi-app || true

            # 删除旧镜像
            docker rmi ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest || true
            docker rmi ${{ env.DOCKERHUB_IMAGE_NAME }}:latest || true

            # 拉取最新镜像（优先使用 Docker Hub）
            docker pull ${{ env.DOCKERHUB_IMAGE_NAME }}:latest

            # 运行新容器
            docker run -d \
              --name strapi-app \
              --restart unless-stopped \
              -p 1337:1337 \
              -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
              -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
              -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
              -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} \
              -e APP_KEYS=${{ secrets.APP_KEYS }} \
              -e API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} \
              -e TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }} \
              -v strapi-uploads:/app/public/uploads \
              ${{ env.DOCKERHUB_IMAGE_NAME }}:latest

            # 清理未使用的镜像
            docker image prune -f
